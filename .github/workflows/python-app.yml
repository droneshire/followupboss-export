name: Python Application

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Python App Docker Test
        id: python-app
        uses: ./.github/actions/docker-python-action
        with:
          version: v2.0.0
      - name: Get Docker results
        run: echo "${{ steps.python-app.outputs.result }}"
      - name: Set variables for coverage badge
        run: |
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          echo $REPO_NAME
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

          REF=${{ github.ref }}
          echo "github.ref: $REF"
          IFS='/' read -ra PATHS <<< "$REF"

          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          FILENAME="${REPO_NAME}__${BRANCH_NAME}.json"
          echo $FILENAME
          echo "FILENAME=${FILENAME}" >> $GITHUB_ENV
      - name: Get code coverage
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          gistID: ${{ secrets.GIST_ID }}
          filename: ${{ env.FILENAME }}
          label: Test Coverage
          message: ${{ steps.python-app.outputs.coverage_percentage }}
          color: green
          namedLogo: jest

  trigger-docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Trigger a dependent workflow
        run: |
          RESPONSE=$(curl -s -w "\n%{http_code}" -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/docker-build.yml/dispatches \
            -d '{
              "ref": "main",
              "inputs": {
                "run": "true",
                "branch": "${{ github.ref_name }}",
                "commit_sha": "${{ github.sha }}"
              }
            }')

          HTTP_BODY=$(echo "$RESPONSE" | head -n 1)
          HTTP_STATUS=$(echo "$RESPONSE" | tail -n 1)

          if [ "$HTTP_STATUS" -ne 204 ]; then
            echo "Error triggering workflow. Status: $HTTP_STATUS"
            echo "Response: $HTTP_BODY"
            exit 1
          fi
